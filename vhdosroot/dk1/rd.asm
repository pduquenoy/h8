
	TITLE	'RDDVD - ND DEVICE DRIVER'
	EJECT
***	RDDVD - RD DEVICE DRIVER.
*
*	J.G. LETWIN
*       SMBAKER
*
*       notes
*          AIO.UNI is unit number 


	XTEXT	ASCII
	XTEXT	DDDEF
	XTEXT	HOSDEF
	XTEXT	HOSEQU
	XTEXT	ECDEF
	XTEXT	ESVAL
	XTEXT	DEVDEF
	XTEXT	FILDEF
	XTEXT	PICDEF
	XTEXT	DVDDEF
	XTEXT	SETCAL
	XTEXT   PGREG

	CODE	PIC

RDCAP EQU     DT.CW+DT.CR+DT.DD+DT.RN         Read, Write, Directory, Random

	DB	DVDFLV		DEVICE DRIVER FLAG VALUE
	DB	RDCAP
	DB	00000001B	MOUNTED UNIT MASK
	DB	1		ONLY 1 UNIT
	DB	RDCAP
	DS	7		1-7:  IGNORED
	DB	DVDFLV		DEVICE DRIVER FLAG
	DW	0		No INIT Parameters		/80.09.gc/

.	SET	025Q						/80.09.gc/
	ERRNZ	*-.						/80.09.gc/
	ERRMI	DVD.STE-.					/80.09.gc/
	DS	DVD.STE-.	RESERVED AREAS			/80.09.gc/
	STL	'SET CODE'
	EJECT
***	SET CODE ENTRY POINT
*
*
*	ENTRY:	(DE)	=  LINE POINTER
*		(A)	=  UNIT NUMBER
*
*	EXIT:	(PSW)	=  'C' CLEAR IF NO ERROR
*			=  'C' SET   IF    ERROR
*
*	USES:	ALL
*

SETNTR	EQU	*
	ERRNZ	*-DVD.STE
	ANA	A
	JNZ	SET1
	MOV	B,D
	MOV	C,E		(BC) = PARAMETER LIST ADDRESS
	LXI	D,PRCTAB	(DE) = PROCESSOR TABLE ADDRESS
	LXI	H,OPTTAB	(HL) = OPTION TABLE ADDRESS
	CALL	$SOP
	RC			THERE WAS AN ERROR
	CALL	$SNA
	RZ			AT THE END OF THE LINE
	MVI	A,EC.ILO
	STC
	RET

SET1	MVI	A,EC.UUN	UNKNOWN UNIT NUMBER
	STC
	RET
	STL	'PROCESSORS'
	EJECT
***	PROCESSORS
*
	SPACE	4,10
**	HELP	-  PROCESS HELP OPTION
*
*	LIST THE VALID OPTIONS ON THE USER CONSOLE
*

HELP	CALL	$TYPTX
	DB	NL,NL,'Set Options for ND:',NL,NL
	DB	'HELP	Type this message',NL
	DB	NL
	DB	'NOTE:	This is the only valid option for the NULL device',NL
	DB	NL,ENL
	XRA	A
	RET
	STL	'SET TABLES'
	EJECT
***	SET TABLES
*
*
	SPACE	4,10
**	OPTAB	-  OPTION TABLE
*

OPTTAB	DW	OPTTABE		END OF THE TABLE
	DB	1

	DB	'HEL','P'+200Q,HELPI

OPTTABE	DB	0
	SPACE	4,10
**	PRCTAB	-  PROCESSOR TABLE
*

PRCTAB	DS	0

HELPI	EQU	*-PRCTAB/2
	DW	HELP
	SPACE	4,10
.	SET	300A
	ERRNZ	*-.
	DS	DVD.ENT-.
	STL	'MAIN ENTRY POINT'
	EJECT
**	MAIN ENTRY POINT

NDDVD	EQU	*
	ERRNZ	*-DVD.ENT	MUST BE AT THE ENTRY POINT
	CALL	$TBRA
	DB	NDREAD-*	READ
	DB	NDWRITE-*	WRITE
	DB	NDREADR-*	READR
	DB	NDOPE-*		OPENR
	DB	NDOPE-*		OPENW
	DB	NDABT-*		OPENU
	DB	NDNOP-*		CLOSE
	DB	NDNOP-*		ABORT
	DB	NDMNT-*		MOUNT
	DB	NDLOAD-*	LOAD
	DB      NDRDY-*         READY

NDABT	MVI	A,EC.DDA	DEVICE DRIVER ABORT
	STC
	RET

NDOPE	EQU	*
NDNOP	ANA	A
	RET			DO NOTHING

NDREADR	EQU	*
	CALL    DREADR
	JMP	NDREAD1
	RET


** Address calculation
**
**   in: sector number in HL
**   out: page number in A, offset in HL
**
**   secaddr = sector<<8
**   pgl  = (secaddr >> 14) & 0x7F
**
**   pgl = (sector >> 6) & 0xFF
**   ofs = (sector << 8) & 0x3F00
**
**   pgl = (L & 0xC0) >> 6
**   pgl = pgl | (H & 0x1F) << 2

CALCPG	EQU 	*
	PUSH	BC
	MOV 	A,L
	ANI 	0C0H
	RRC
	RRC
	RRC
	RRC
	RRC
	RRC
	MOV 	B,A
	MOV	A,H
	ANI	01FH
	RLC
	RLC
	ORA 	B
	POP 	BC
	PUSH	PSW
	MOV     A,L
	ANI	03FH
	MOV	H,A
	MVI	L,000H
	POP	PSW
	RET

** Read Sector
** BC = Byte Count
** DE = Dest Address
** HL = Block Number

NDREAD	EQU	*
	CALL    DREAD
NDREAD1 EQU     *
	PUSH    B
	PUSH	D
	PUSH	H

	CALL    CALCPG
	OUT	RD00K,A

	DI
	MVI	A,083H		BANK 3, page enable
	OUT     RD00KH,A

RLOOP   MOV     A,M             Load value in memory location HL into A
	STAX	D               Store value in A into memory location DE
	INX	D
	INX	H
        DCX     B
	MOV	A,B
	ORA	C
	JNZ	RLOOP

	MVI     A,000H		page disable
	OUT	RD00KH,A
	EI

	POP	H
	POP	D
	POP	B
	ANA	A
	RET

NDWRITE	EQU     *
	CALL	DWRITE
	PUSH    B
	PUSH	D
	PUSH	H

	CALL    CALCPG
	OUT	WR00K,A

	DI
	MVI	A,083H		BANK 3, page enable
	OUT     WR00KH,A

WLOOP   LDAX	D               Load value in memory location DE into A
	MOV     M,A             Store value in A into memory location HL
	INX	D
	INX	H
        DCX     B
	MOV	A,B
	ORA	C
	JNZ	WLOOP

	MVI     A,000H		page disable
	OUT	WR00KH,A
	EI

	POP	H
	POP	D
	POP	B
	ANA	A
	RET

NDLOAD	EQU	*
        CALL    DLOAD
	CALL    PGINIT
	ANA	A
	RET

NDRDY	EQU	*
	CALL	DRDY
	ANA	A
	RET

NDMNT	EQU	*
	CALL	DMNT
	ANA	A
	RET

** Library stuff

	XTEXT	PGMAP

** Debug messages

DLOAD   EQU	*
 	PUSH    PSW
	PUSH	H
	LXI	H,MLOAD
	SCALL   .PRINT
	POP	H
	POP	PSW
	RET

DREADR	EQU	*
	PUSH    PSW
	PUSH	H
	LXI	H,MREADR
	SCALL   .PRINT
	POP	H
	POP	PSW
	RET

DREAD	EQU	*
	PUSH    PSW
	PUSH	H
	LXI	H,MREAD
	SCALL   .PRINT
	POP	H
	POP	PSW
	RET

DWRITE	EQU	*
	PUSH    PSW
	PUSH	H
	LXI	H,MWRITE
	SCALL   .PRINT
	POP	H
	POP	PSW
	RET

DRDY	EQU	*
	PUSH    PSW
	PUSH	H
	LXI	H,MRDY
	SCALL   .PRINT
	POP	H
	POP	PSW
	RET

DMNT	EQU	*
	PUSH    PSW
	PUSH	H
	LXI	H,MMNT
	SCALL   .PRINT
	POP	H
	POP	PSW
	RET		

MLOAD	DB	12Q,'RD: LOAD',212Q
MREAD   DB      12Q,'RD: READ',212Q
MREADR  DB      12Q,'RD: READ REGARDLESS',212Q
MWRITE  DB      12Q,'RD: WRITE',212Q
MRDY    DB      12Q,'RD: READY',212Q
MMNT    DB      12Q,'RD: MOUNT',212Q

	XTEXT	TBRA
	XTEXT	TYPTX
	DB	'RW'		DUMY ADDRESS FOR RELOCATION
	DS	32		PATCH AREA

	LON	G

	END
